[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
#variable_parameter_AREA_START : 0,0
#variable_parameter_AREA_END : 0,0
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}

    RESPOND TYPE=command MSG="Heating bed"
    M190 S{BED_TEMP}                # Wait for bed to reach temperature
    
    #RESPOND TYPE=command MSG="Waiting 5 minutes to home"
    #G4 P300000                      # wait 5 minutes for temps to stabilize prior to homing

    #RESPOND TYPE=command MSG="Heatsoak 10 minutes"
    #G4 P600000                      # heatsoak 10 minutes
    
    BED_MESH_CLEAR

    RESPOND TYPE=command MSG="Homing"
    G28

    #SET_GCODE_OFFSET Z=0.0          # Reset the G-Code Z offset (adjust Z offset if needed)
        
    RESPOND TYPE=command MSG="Creating bed mesh"
    BED_MESH_CALIBRATE              # create new bed mesh

    G1 X102.5 Y172.5 F5000          # move to center of bed

    RESPOND TYPE=command MSG="Heating hotend"
    M109 S{EXTRUDER_TEMP}           # wait for nozzle to reach temperature
  
    G90                             # Use absolute coordinates

    RESPOND TYPE=command MSG="Purging"
    #PURGE                           # Purge filament macro
    #LINE_PURGE
    VORON_PURGE

    RESPOND TYPE=error MSG="Let's gooo!!"

[gcode_macro PREHEAT]
gcode:
    M140 S60        # Set bed temp to 60
    M104 S215       # Set extruder temp to 215

[gcode_macro HEATERS_OFF]
gcode:
    M140 S0        # Set bed temp to 0
    M104 S0        # Set extruder temp to 0

[gcode_macro FILAMENT_EJECT]
gcode:
    M109 S180       # Set extruder temp
    G1 E-40 F300    # retract 40mm
    G4 P1000        # wait 1 minute
    M104 S0         # Set extruder temp

[gcode_macro FILAMENT_LOAD]
gcode:
    M109 S180       # Set extruder temp
    G1 E40 F300     # extract 40mm
    G1 E-5 F300     # retract 5mm
    M104 S0         # Set extruder temp

[gcode_macro PURGE]
gcode:
    G90                       # absolute mode
    G92 E0                    # reset extruder
    G1 X5 Y0 Z5 F6000         # Move printhead to start position
    G1 E25 F300               # extrude 25mm filament
    G1 Z6 F6000               # move to Z6
    G1 X30 F6000              # move over to X30
    G1 Z0.3 F3000             # move to Z0.3
    G92 E0                    # reset extruder
    G1 X145 E10 Z0.3 F1500    # Move to X140 while extruding 10mm filament to create line
    G91                       # relative mode
    G1 E-1 F300               # retract 1mm
    G1 Z3 F3000               # z hop
    G92 E0                    # reset extruder
    G90                       # absolute mode

[gcode_macro PRINT_END]
gcode:
    M140 S0             # turn off bed
    M104 S0             # turn off extruder temp
    M106 S0             # turn off fan
    G91                 # relative mode
    G1 X-2 Y-2          # move nozzle away from print
    G1 Z10              # lift 10mm
    G1 E-10 F300        # retract 10mm
    G92 E0 F300         # reset extruder
    G90                 # absolute origin
    G1 X205 Y175 F5000  # Present print
    M84                 # disable steppers

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  #{% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
  #  _TOOLHEAD_PARK_PAUSE_CANCEL
  #{% endif %}
    TURN_OFF_HEATERS
    G91                    # relative mode
    G1 Z10                 # raise Z 10mm
    M106 S0                # turn off fan
    G1 E-10 F300           # retract 10mm
    G92 E0 F300            # reset extruder
    G90                    # absolute origin
    G1 X205 Y175 F5000     # Present print
    M84                    # disable steppers
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}